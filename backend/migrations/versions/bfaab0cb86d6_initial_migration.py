"""initial migration

Revision ID: bfaab0cb86d6
Revises: 
Create Date: 2025-05-15 20:08:36.347359

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bfaab0cb86d6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('default_security_mode',
    sa.Column('mode_id', sa.UUID(), nullable=False),
    sa.Column('mode_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_selectable', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('mode_id')
    )
    with op.batch_alter_table('default_security_mode', schema=None) as batch_op:
        batch_op.create_index('idx_default_security_mode_name', ['mode_name'], unique=False)

    op.create_table('role',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('role_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('role_id')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_index('idx_role_name', ['role_name'], unique=False)

    op.create_table('subscription_plan',
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('max_homes', sa.Integer(), nullable=False),
    sa.Column('max_sensors', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('plan_id')
    )
    with op.batch_alter_table('subscription_plan', schema=None) as batch_op:
        batch_op.create_index('idx_subscription_plan_name', ['name'], unique=False)

    op.create_table('user',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=True),
    sa.Column('google_id', sa.String(length=128), nullable=True),
    sa.Column('google_refresh_token', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('email_confirmed', sa.Boolean(), nullable=True),
    sa.Column('subscription_plan_name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('idx_user_role_id', ['role_id'], unique=False)

    op.create_table('general_user_notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('importance', sa.Enum('low', 'medium', 'high', name='importance_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('general_user_notifications', schema=None) as batch_op:
        batch_op.create_index('idx_general_notifications_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_general_notifications_user_id', ['user_id'], unique=False)

    op.create_table('home',
    sa.Column('home_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('default_mode_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['default_mode_id'], ['default_security_mode.mode_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('home_id')
    )
    with op.batch_alter_table('home', schema=None) as batch_op:
        batch_op.create_index('idx_home_default_mode_id', ['default_mode_id'], unique=False)
        batch_op.create_index('idx_home_is_archived', ['is_archived'], unique=False)
        batch_op.create_index('idx_home_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_home_user_is_archived', ['user_id', 'is_archived'], unique=False)

    op.create_table('mobile_device',
    sa.Column('user_device_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('device_token', sa.String(), nullable=False),
    sa.Column('device_info', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_device_id')
    )
    with op.batch_alter_table('mobile_device', schema=None) as batch_op:
        batch_op.create_index('idx_mobile_device_token', ['device_token'], unique=False)
        batch_op.create_index('idx_mobile_device_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_mobile_device_user_token', ['user_id', 'device_token'], unique=False)

    op.create_table('subscription',
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plan.plan_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subscription_id')
    )
    with op.batch_alter_table('subscription', schema=None) as batch_op:
        batch_op.create_index('idx_subscription_plan_id', ['plan_id'], unique=False)
        batch_op.create_index('idx_subscription_start_date', ['start_date'], unique=False)
        batch_op.create_index('idx_subscription_user_active', ['user_id', 'is_active'], unique=False)
        batch_op.create_index('idx_subscription_user_id', ['user_id'], unique=False)

    op.create_table('security_user_notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('home_id', sa.UUID(), nullable=False),
    sa.Column('sensor_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('importance', sa.Enum('low', 'medium', 'high', name='importance_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['home_id'], ['home.home_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('security_user_notifications', schema=None) as batch_op:
        batch_op.create_index('idx_security_user_notifications_home_created', ['home_id', 'created_at'], unique=False)
        batch_op.create_index('idx_security_user_notifications_home_id', ['home_id'], unique=False)
        batch_op.create_index('idx_security_user_notifications_user_created', ['user_id', 'created_at'], unique=False)
        batch_op.create_index('idx_security_user_notifications_user_id', ['user_id'], unique=False)

    op.create_table('sensor',
    sa.Column('sensor_id', sa.UUID(), nullable=False),
    sa.Column('home_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('is_closed', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_security_breached', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['home_id'], ['home.home_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sensor_id')
    )
    with op.batch_alter_table('sensor', schema=None) as batch_op:
        batch_op.create_index('idx_sensor_home_id', ['home_id'], unique=False)
        batch_op.create_index('idx_sensor_home_is_archived', ['home_id', 'is_archived'], unique=False)
        batch_op.create_index('idx_sensor_is_active', ['is_active'], unique=False)
        batch_op.create_index('idx_sensor_is_archived', ['is_archived'], unique=False)
        batch_op.create_index('idx_sensor_is_breached', ['is_security_breached'], unique=False)
        batch_op.create_index('idx_sensor_is_closed', ['is_closed'], unique=False)
        batch_op.create_index('idx_sensor_user_is_archived', ['user_id', 'is_archived'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sensor', schema=None) as batch_op:
        batch_op.drop_index('idx_sensor_user_is_archived')
        batch_op.drop_index('idx_sensor_is_closed')
        batch_op.drop_index('idx_sensor_is_breached')
        batch_op.drop_index('idx_sensor_is_archived')
        batch_op.drop_index('idx_sensor_is_active')
        batch_op.drop_index('idx_sensor_home_is_archived')
        batch_op.drop_index('idx_sensor_home_id')

    op.drop_table('sensor')
    with op.batch_alter_table('security_user_notifications', schema=None) as batch_op:
        batch_op.drop_index('idx_security_user_notifications_user_id')
        batch_op.drop_index('idx_security_user_notifications_user_created')
        batch_op.drop_index('idx_security_user_notifications_home_id')
        batch_op.drop_index('idx_security_user_notifications_home_created')

    op.drop_table('security_user_notifications')
    with op.batch_alter_table('subscription', schema=None) as batch_op:
        batch_op.drop_index('idx_subscription_user_id')
        batch_op.drop_index('idx_subscription_user_active')
        batch_op.drop_index('idx_subscription_start_date')
        batch_op.drop_index('idx_subscription_plan_id')

    op.drop_table('subscription')
    with op.batch_alter_table('mobile_device', schema=None) as batch_op:
        batch_op.drop_index('idx_mobile_device_user_token')
        batch_op.drop_index('idx_mobile_device_user_id')
        batch_op.drop_index('idx_mobile_device_token')

    op.drop_table('mobile_device')
    with op.batch_alter_table('home', schema=None) as batch_op:
        batch_op.drop_index('idx_home_user_is_archived')
        batch_op.drop_index('idx_home_user_id')
        batch_op.drop_index('idx_home_is_archived')
        batch_op.drop_index('idx_home_default_mode_id')

    op.drop_table('home')
    with op.batch_alter_table('general_user_notifications', schema=None) as batch_op:
        batch_op.drop_index('idx_general_notifications_user_id')
        batch_op.drop_index('idx_general_notifications_created_at')

    op.drop_table('general_user_notifications')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('idx_user_role_id')

    op.drop_table('user')
    with op.batch_alter_table('subscription_plan', schema=None) as batch_op:
        batch_op.drop_index('idx_subscription_plan_name')

    op.drop_table('subscription_plan')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index('idx_role_name')

    op.drop_table('role')
    with op.batch_alter_table('default_security_mode', schema=None) as batch_op:
        batch_op.drop_index('idx_default_security_mode_name')

    op.drop_table('default_security_mode')
    # ### end Alembic commands ###
